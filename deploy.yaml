apiVersion: v1
kind: ConfigMap
metadata:
  name: urls-config
data:
  D_APP_HOST: d-app-service.diplom:8080
  D_MOCK_HOST: mock-all-service.diplom:8080
  D_ORCHESTRATOR_HOST: d-orchestartor.diplom:8080
  SPRING_PROFILES_ACTIVE: k8s
  MONGO_HOST: mongo-service.diplom
  MONGO_PORT: "27017"
  KAFKA_HOST: kafka-service.diplom:9092
  APPLICATION_SCHEDULE_RATE: "15000"
  KAFKA_APP_DESTINATION: offer-in
  KAFKA_OFFER_IN_DEST: offer-in
  KAFKA_OFFER_OUT_DEST: offer-out
  EXT_TASK_LOCK_DURATION: 15s
  EXT_TASK_ASYNC_RESPONSE_TIMEOUT: 60s
  D_CONNECTION_TIMEOUT: 15s
  D_READ_TIMEOUT: 15s
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: zookeeper-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper-1
  template:
    metadata:
      labels:
        app: zookeeper-1
    spec:
      containers:
      - name: zoo
        image: digitalwonderland/zookeeper
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_ID
          value: "1"
        - name: ZOOKEEPER_SERVER_1
          value: zoo

---

apiVersion: v1
kind: Service
metadata:
  name: zoo
  labels:
    app: zookeeper-1
spec:
  ports:
  - name: client
    port: 2181
    protocol: TCP
  - name: follower
    port: 2888
    protocol: TCP
  - name: leader
    port: 3888
    protocol: TCP
  selector:
    app: zookeeper-1
    
---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-broker0
spec:
  replicas: 1
  selector:
    matchLabels:
        app: kafka
        id: "0"
  template:
    metadata:
      labels:
        app: kafka
        id: "0"
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "30718"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: 192.168.1.240
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo:2181
        - name: KAFKA_BROKER_ID
          value: "0"
          
---

apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    name: kafka
spec:
  ports:
  - port: 9092
    name: kafka-port
    protocol: TCP
  selector:
    app: kafka
    id: "0"
  type: LoadBalancer
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mock-all
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mock-all
  template:
    metadata:
      labels:
        app: mock-all
        visualize: "true"
    spec:
      containers:
        - name: mock-all-pod
          image: v4eii/d-mock-all
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: SPRING_PROFILES_ACTIVE
          ports:
            - containerPort: 8080
---

apiVersion: v1
kind: Service
metadata:
  labels:
    visualize: "true"
  name: mock-all-service
spec:
  selector:
    app: mock-all
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
        visualize: "true"
    spec:
      containers:
        - name: mongo
          image: mongo
          env:
          ports:
            - containerPort: 27017

---

apiVersion: v1
kind: Service
metadata:
  labels:
    visualize: "true"
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - name: http
      protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: d-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: d-app
  template:
    metadata:
      labels:
        app: d-app
        visualize: "true"
    spec:
      containers:
        - name: d-app-pod
          image: v4eii/d-app
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: SPRING_PROFILES_ACTIVE
            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: MONGO_HOST
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: MONGO_PORT
            - name: KAFKA_HOST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: KAFKA_HOST
            - name: APPLICATION_SCHEDULE_RATE
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: APPLICATION_SCHEDULE_RATE
            - name: KAFKA_APP_DESTINATION
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: KAFKA_APP_DESTINATION
          ports:
            - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  labels:
    visualize: "true"
  name: d-app-service
spec:
  selector:
    app: d-app
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
  
  
---
  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: d-offer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: d-offer
  template:
    metadata:
      labels:
        app: d-offer
        visualize: "true"
    spec:
      containers:
        - name: d-offer-pod
          image: v4eii/d-offers
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: SPRING_PROFILES_ACTIVE
            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: MONGO_HOST
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: MONGO_PORT
            - name: KAFKA_OFFER_OUT_DEST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: KAFKA_OFFER_OUT_DEST
            - name: KAFKA_OFFER_IN_DEST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: KAFKA_OFFER_IN_DEST
          ports:
            - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  labels:
    visualize: "true"
  name: d-offer-service
spec:
  selector:
    app: d-offer
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
  
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: d-orchestrator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: d-orchestrator
  template:
    metadata:
      labels:
        app: d-orchestrator
        visualize: "true"
    spec:
      containers:
        - name: d-orchestrator-pod
          image: v4eii/d-orchestrator
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: SPRING_PROFILES_ACTIVE
            - name: D_MOCK_HOST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: D_MOCK_HOST
            - name: D_APP_HOST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: D_APP_HOST
          ports:
            - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  labels:
    visualize: "true"
  name: d-orchestrator-service
spec:
  selector:
    app: d-orchestrator
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
  
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: d-integration
spec:
  replicas: 1
  selector:
    matchLabels:
      app: d-integration
  template:
    metadata:
      labels:
        app: d-integration
        visualize: "true"
    spec:
      containers:
        - name: d-integration-pod
          image: v4eii/d-integration
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: SPRING_PROFILES_ACTIVE
            - name: D_MOCK_HOST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: D_MOCK_HOST
            - name: D_ORCHESTRATOR_HOST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: D_ORCHESTRATOR_HOST
            - name: EXT_TASK_LOCK_DURATION
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: EXT_TASK_LOCK_DURATION
            - name: D_CONNECTION_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: D_CONNECTION_TIMEOUT
            - name: D_READ_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: D_READ_TIMEOUT
            - name: D_APP_HOST
              valueFrom:
                configMapKeyRef:
                  name: urls-config
                  key: D_APP_HOST
          ports:
            - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  labels:
    visualize: "true"
  name: d-integration-service
spec:
  selector:
    app: d-integration
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
